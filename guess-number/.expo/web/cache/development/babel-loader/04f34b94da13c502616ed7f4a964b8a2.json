{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rguliani/Documents/learning/react-native/react-native-tutorials/guess-number/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Header from \"./components/core/Header\";\nimport StartScreen from \"./screens/StartScreen\";\nimport GameScreen from \"./screens/GameScreen\";\nimport GameOver from \"./screens/GameOver\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userNumber = _useState2[0],\n      setUserNumber = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      guessRounds = _useState4[0],\n      setGuessRound = _useState4[1];\n\n  var startGameHandler = function startGameHandler(selectedNumber) {\n    setUserNumber(selectedNumber);\n    setGuessRound(0);\n  };\n\n  var gameOverHandler = function gameOverHandler(numOfRounds) {\n    setGuessRound(numOfRounds);\n  };\n\n  var content = React.createElement(StartScreen, {\n    onStartGame: startGameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  });\n\n  if (userNumber && guessRounds <= 0) {\n    content = React.createElement(GameScreen, {\n      userChoice: userNumber,\n      onGameOver: gameOverHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    });\n  } else if (guessRounds > 0) {\n    content = React.createElement(GameOver, {\n      totalRounds: guessRounds,\n      userNumber: userNumber,\n      restart: configureGameHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    title: \"Guess a Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), content);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/rguliani/Documents/learning/react-native/react-native-tutorials/guess-number/App.js"],"names":["StatusBar","React","useState","Header","StartScreen","GameScreen","GameOver","App","userNumber","setUserNumber","guessRounds","setGuessRound","startGameHandler","selectedNumber","gameOverHandler","numOfRounds","content","configureGameHandler","styles","container","StyleSheet","create","flex"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,OAAOC,MAAP;AAEA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACQL,QAAQ,EADhB;AAAA;AAAA,MACrBM,UADqB;AAAA,MACTC,aADS;;AAAA,mBAESP,QAAQ,CAAC,CAAD,CAFjB;AAAA;AAAA,MAErBQ,WAFqB;AAAA,MAERC,aAFQ;;AAI5B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,cAAD,EAAoB;AAC3CJ,IAAAA,aAAa,CAACI,cAAD,CAAb;AACAF,IAAAA,aAAa,CAAC,CAAD,CAAb;AACD,GAHD;;AAKA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAiB;AACvCJ,IAAAA,aAAa,CAACI,WAAD,CAAb;AACD,GAFD;;AAIA,MAAIC,OAAO,GAAG,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAEJ,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;;AAEA,MAAIJ,UAAU,IAAIE,WAAW,IAAI,CAAjC,EAAoC;AAClCM,IAAAA,OAAO,GACL,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAER,UAAxB;AAAoC,MAAA,UAAU,EAAEM,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAIO,IAAIJ,WAAW,GAAG,CAAlB,EAAqB;AAC1BM,IAAAA,OAAO,GACL,oBAAC,QAAD;AACE,MAAA,WAAW,EAAEN,WADf;AAEE,MAAA,UAAU,EAAEF,UAFd;AAGE,MAAA,OAAO,EAAES,oBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,OAFH,CADF;AAMD;AAED,IAAME,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport Header from \"./components/core/Header\";\n\nimport StartScreen from \"./screens/StartScreen\";\nimport GameScreen from \"./screens/GameScreen\";\nimport GameOver from \"./screens/GameOver\";\n\nexport default function App() {\n  const [userNumber, setUserNumber] = useState();\n  const [guessRounds, setGuessRound] = useState(0);\n\n  const startGameHandler = (selectedNumber) => {\n    setUserNumber(selectedNumber);\n    setGuessRound(0);\n  };\n\n  const gameOverHandler = (numOfRounds) => {\n    setGuessRound(numOfRounds);\n  };\n\n  let content = <StartScreen onStartGame={startGameHandler} />;\n\n  if (userNumber && guessRounds <= 0) {\n    content = (\n      <GameScreen userChoice={userNumber} onGameOver={gameOverHandler} />\n    );\n  } else if (guessRounds > 0) {\n    content = (\n      <GameOver\n        totalRounds={guessRounds}\n        userNumber={userNumber}\n        restart={configureGameHandler}\n      />\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Header title=\"Guess a Number\" />\n      {content}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}