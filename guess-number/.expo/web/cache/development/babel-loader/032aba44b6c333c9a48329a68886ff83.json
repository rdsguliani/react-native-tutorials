{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rguliani/Documents/learning/react-native/react-native-tutorials/guess-number/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Header from \"./components/core/Header\";\nimport StartScreen from \"./screens/StartScreen\";\nimport GameScreen from \"./screens/GameScreen\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userNumber = _useState2[0],\n      setUserNumber = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      guessRounds = _useState4[0],\n      setGuessRound = _useState4[1];\n\n  var startGameHandler = function startGameHandler(selectedNumber) {\n    setUserNumber(selectedNumber);\n  };\n\n  var gameEndHandler = function gameEndHandler() {};\n\n  var content = React.createElement(StartScreen, {\n    onStartGame: startGameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  });\n\n  if (userNumber) {\n    content = React.createElement(GameScreen, {\n      userChoice: userNumber,\n      onGameEnd: gameEndHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    title: \"Guess a Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), content);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/rguliani/Documents/learning/react-native/react-native-tutorials/guess-number/App.js"],"names":["StatusBar","React","useState","Header","StartScreen","GameScreen","App","userNumber","setUserNumber","guessRounds","setGuessRound","startGameHandler","selectedNumber","gameEndHandler","content","styles","container","StyleSheet","create","flex"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,OAAOC,MAAP;AAEA,OAAOC,WAAP;AACA,OAAOC,UAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACQJ,QAAQ,EADhB;AAAA;AAAA,MACrBK,UADqB;AAAA,MACTC,aADS;;AAAA,mBAESN,QAAQ,CAAC,CAAD,CAFjB;AAAA;AAAA,MAErBO,WAFqB;AAAA,MAERC,aAFQ;;AAI5B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,cAAD,EAAoB;AAC3CJ,IAAAA,aAAa,CAACI,cAAD,CAAb;AACD,GAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM,CAAE,CAA/B;;AAEA,MAAIC,OAAO,GAAG,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAEH,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;;AAEA,MAAIJ,UAAJ,EAAgB;AACdO,IAAAA,OAAO,GAAG,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAEP,UAAxB;AAAoC,MAAA,SAAS,EAAEM,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGF,OAFH,CADF;AAMD;AAED,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport Header from \"./components/core/Header\";\n\nimport StartScreen from \"./screens/StartScreen\";\nimport GameScreen from \"./screens/GameScreen\";\n\nexport default function App() {\n  const [userNumber, setUserNumber] = useState();\n  const [guessRounds, setGuessRound] = useState(0);\n\n  const startGameHandler = (selectedNumber) => {\n    setUserNumber(selectedNumber);\n  };\n\n  const gameEndHandler = () => {};\n\n  let content = <StartScreen onStartGame={startGameHandler} />;\n\n  if (userNumber) {\n    content = <GameScreen userChoice={userNumber} onGameEnd={gameEndHandler} />;\n  }\n\n  return (\n    <View style={styles.container}>\n      <Header title=\"Guess a Number\" />\n      {content}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}